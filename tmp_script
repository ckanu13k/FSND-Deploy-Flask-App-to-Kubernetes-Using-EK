   12  ls -rt *.py
   13  cp get_datalag.py get_datalag_dou_ly.py
   14  vi get_datalag_dou_ly.py
   15  q!
   16  vi get_datalag_dou_ly.py
   17  python get_datalag_dou_ly.py
   18  python get_datalag_dou_ly.py
   19  vi 4D_CNN_double_RNet_dd_dou_ly.py
   20  vi 4D_CNN_double_dou_ly.py
   21  python 4D_CNN_double_dou_ly.py
   22  vi 4D_CNN_double_dou_ly.py
   23  python 4D_CNN_double_dou_ly.py
   24  q!
   25  vi 4D_CNN_double_dou_ly.py
   26  python 4D_CNN_double_dou_ly.py
   27  vi 4D_CNN_double_dou_ly.py
   28  vi 4D_CNN_double_dou_ly.py
   29  ls -rt
   30  ls -lrt
   31  ls -rt *.npy
   32  rm -rf datadiff_load_save_abcdef_dou_ly.npy
   33  rm -rf datadiff2_load_save_abcdef_dou_ly.npy
   34  python 4D_CNN_double_dou_ly.py
   35  ls -rt
   36  ls -rt *.py
   37  vi datadiff_load_save_abcdef_dou_ly_cor.npy
   38  cd ..'
   39  cd ../
   40  ls- rt
   41  ls -rt
   42  cd projects/
   43  ls -rt
   44  cd 03_coffee_shop_full_stack
   45  ls -rt
   46  cd starter_code/
   47  ls -rt
   48  cd backend/
   49  ls -rt
   50  cd src/
   51  ls -rt
   52  cd ../
   53  ls -rt
   54  vi README.md 
   55  export FLASK_APP=api.py
   56  flask run
   57  cd src/
   58  export FLASK_APP=api.py
   59  flask run
   60  brew install jq 
   61  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"1234567"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   62  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   63  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth`
   64  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq type`
   65  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth`
   66  TOKEN
   67  echo $TOKEN
   68  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   69  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.access_token'`
   70  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   71  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth`
   72  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth -s`
   73  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth` -s
   74  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth`
   75  curl --request GET 'http://127.0.0.1:8080/contents' -H "Authorization: Bearer ${TOKEN}" | jq .
   76  curl --request GET 'http://127.0.0.1:8080/contents' -H "Authorization: Bearer ${TOKEN}"
   77  export TOKEN=`curl -d '{"email":"test@gmail.com","password":"j12a345k"}' -H "Content-Type: application/json" -X POST localhost:8080/auth`
   78  export TOKEN=`curl -d '{"email":"wolf@thedoor.com","password":"huff-puff"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   79  export TOKEN=`curl -d '{"email":"wolf@thedoor.com","password":"huff-puff"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   80  export TOKEN=`curl -d '{"email":"wolf@thedoor.com","password":"huff-puff"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
   81  echo $TOKEN
   82  curl --request GET 'http://127.0.0.1:8080/contents' -H "Authorization: Bearer ${TOKEN}" | jq .
   83  cd /Users/k_focus/Dev3/devito/examples/seismic/tutorials
   84  ls -rt
   85  rm -f *.npy
   86  cd /Users/k_focus/Dev2/devito/examples/seismic/tutorials
   87  ls -rt
   88  jupyter notebook 
   89  cd /Users/k_focus/Dev/devito/examples/seismic/tutorials
   90  jupyter notebook 
   91  pwd
   92  ls -rt
   93  cd examples/seismic/tutorials/
   94  ls -rt
   95  cp 03_fwi.ipynb 03_fwi_k.ipynb
   96  vi main.py 
   97  ls -rt
   98  vi test_main.py 
   99  vi main.py 
  100  ls -rt
  101  pwd
  102  cd /Users/k_focus/Dev/devito
  103  ls -rt
  104  cd examples/
  105  ls -rt
  106  cd seismic/
  107  ls -rt
  108  cd tutorials/
  109  ls -rt
  110  ls -rt *b
  111  cp 03_fwi.ipynb 03_fwi_k.ipynb
  112  pwd
  113  cd /Users/k_focus/Dev3/devito/
  114  jupyter notebook &
  115  pwd
  116  docker-compose up devito
  117  pwd
  118  docker-compose up devito
  119  lsof -i :8888
  120  docker-compose up devito
  121  docker-compose up devito
  122  lsof -i :8888
  123  docker-compose up devito
  124  pwd
  125  cd
  126  ls -rt
  127  cd Project
  128  cd Projects
  129  ls -rt
  130  mkdir Nigeria
  131  cd Nigeria/
  132  cp ~k_focus/Downloads/Business_DTF_Scores_by_States.xlsx .
  133  ls -rt
  134  jupyter notebook &
  135  pwd
  136  pwd
  137  ls -rt
  138  cd ../../frontend/
  139  cd src/
  140  ls -rt
  141  cd environments/
  142  ls -rt
  143  vi environment.ts 
  144  ps
  145  pwd
  146  cd ../../../../../
  147  cd ../
  148  ls -rt
  149  pwd
  150  vi Dockerfile
  151  docker build --tag test .
  152  ls -rt
  153  mkdir Containers
  154  cd Containers/
  155  ls -rt
  156  cp ../Dockerfile .
  157  vi Dockerfile 
  158  docker build --tag test .
  159  ls -rt
  160  docker run test -rm
  161  vi Dockerfile 
  162  cp Dockerfile Dockerfile1
  163  vi Dockerfile
  164  docker build -t test .
  165  docker run  -p 80:8080 test
  166  ls -rt
  167  vi app.fy
  168  vi app.py
  169  docker build -t test .
  170  docker run  -p 80:8080 test
  171  ls -rt
  172  pwd
  173  cp ~k_focus/Downloads/new_user_credentials.csv .
  174  ls -rt
  175  aws configure list
  176  aws configure --profile default
  177  aws configure list
  178  aws sts get-caller-identity
  179  vi trust.json
  180  vi trust.json
  181  vi temp_script
  182  vi temp_script
  183  vi iam-role-policy.json
  184  aws iam create-role --role-name UdacityFlaskDeployCBKubectlRole --assume-role-policy-document file://trust.json --output text --query 'Role.Arn'
  185  aws iam put-role-policy
  186  aws iam put-role-policy --role-name UdacityFlaskDeployCBKubectlRole --policy-name eks-describe --policy-document file://iam-role-policy.json
  187  vi temp_script 
  188  vi temp_script 
  189  aws s3 ls
  190  brew tap weaveworks/tap
  191  brew install weaveworks/tap/eksctl
  192  sudo chown -R $(whoami) /usr/local/opt /usr/local/sbin
  193  brew install weaveworks/tap/eksctl
  194  kubectl version
  195  eksctl create cluster --name eksctl-demo
  196  kubectl get nodes
  197   eksctl delete cluster eksctl-demo
  198  pwd
  199  cd ../
  200  ls -rt
  201  git clone https://github.com/udacity/FSND-Deploy-Flask-App-to-Kubernetes-Using-EKS.git 
  202  ls -rt
  203  cd FSND-Deploy-Flask-App-to-Kubernetes-Using-EKS/
  204  ls -rt
  205  vi test_main.py 
  206  vi main.py 
  207  cd ../
  208  ls -rt
  209  rm -rf FSND-Deploy-Flask-App-to-Kubernetes-Using-EKS/
  210  pwd
  211  git clone https://github.com/ckanu13k/FSND-Deploy-Flask-App-to-Kubernetes-Using-EKS.git
  212  ls -rt
  213  cd FSND-Deploy-Flask-App-to-Kubernetes-Using-EKS/
  214  ls -rt
  215  pip install -r requirements.txt
  216  vi requirements.txt 
  217  export JWT_SECRET='myjwtsecret'
  218  export LOG_LEVEL=DEBUG
  219  python main.py
  220  ls -rt
  221  python main.py
  222  netstat -aon | findstr 8080
  223  netstat -aon | findstr 8080
  224  tasklist | findstr
  225  netstat -aon | find "8080"
  226  netstat -aon | find 8080
  227  lsof -i :8080
  228  python main.py
  229  ls -rt
  230  vi .env_file
  231  python main.py
  232  pip install -r requirements.txt
  233  python test_main.py 
  234  vi test_main.py 
  235  vi test_main.py 
  236  vi main.py 
  237  python main.py
  238  vi main.py 
  239  python main.py
  240  vi main.py 
  241  vi main.py 
  242  python main.py
  243  vi main.py 
  244  python main.py
  245  python main.py
  246  cd ../
  247  pwd
  248  ls -rt
  249  mkdir VGG16
  250  cd VGG16/
  251  cp ~k_focus/Downloads/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5 .
  252  ls -rt
  253  pwd
  254  cp ~k_focus/Downloads/Kanu.jpg .
  255  python 4D_CNN_double_dou_ly.py
  256  pwd
  257  ls -rt
  258  cp ~k_focus/Downloads/Test_bp_1deg_sampling2* .
  259  ls -rt
  260  cp ~k_focus/Documents/Business_DTF_Scores_by_States/* .
  261  ls -rt
  262  vi Enforcing\ contracts-Table\ 1.csv 
  263  vi Enforcing\ contracts-Table\ 1.csv 
  264  vi DTF\ Score-Table\ 1.csv 
  265  vi Starting\ business-Table\ 1.csv 
  266  vi Registering\ property-Table\ 1.csv 
  267  vi Enforcing\ contracts-Table\ 1.csv 
  268  vi building\ quality\ control-Table\ 1.csv 
  269  vi construction\ permits-Table\ 1.csv 
  270  vi Registering\ property-Table\ 1.csv 
  271  vi Starting\ business-Table\ 1.csv 
  272  ls -rt
  273  vi DTF\ Score-Table\ 1.csv 
  274  vi DTF\ Score-Table\ 1.csv 
  275  vi Starting\ business-Table\ 1.csv 
  276  vi Starting\ business-Table\ 1.csv 
  277  vi Registering\ property-Table\ 1.csv 
  278  vi Registering\ property-Table\ 1.csv 
  279  vi construction\ permits-Table\ 1.csv 
  280  vi construction\ permits-Table\ 1.csv 
  281  vi building\ quality\ control-Table\ 1.csv 
  282  vi Enforcing\ contracts-Table\ 1.csv 
  283  vi Enforcing\ contracts-Table\ 1.csv 
  284  pwd
  285  cd ../
  286  ls -rt
  287  cd ../
  288  ls -rt
  289  cd Project
  290  cd Projects
  291  ls -lrt
  292  cd Macro_data_mine
  293  ls -rt
  294  vi search_twiter_Nigeria.py
  295  vi Macro_tmp.py
  296  cd ../
  297  ls -rt
  298  cd Web_scrapping
  299  ls -rt
  300  jupyter notebook &
  301  ls -rt
  302  cd ../
  303  ls -rt
  304  cd Health
  305  ls -rt
  306  cd ../
  307  ls -rt
  308  cd ../
  309  ls -rt
  310  pwd
  311  cd Documents/
  312  ls -rt
  313  pwd
  314  cd Projects/
  315  ls -rt
  316  ls -rt Africa_Data/
  317  cd Africa_Data
  318  jupyter notebook &
  319  ls -rt
  320  cd ../
  321  ls -rt
  322  cd 
  323  cd Data_jam
  324  ls -rt
  325  pwd
  326  cd
  327  cd Documents/
  328  cd Projects/
  329  ls -rt
  330  cd Data_jam/
  331  ls -rt
  332  jupyter notebook &
  333  ls -rt
  334  cd ../
  335  ls -rt
  336  cd DataScience
  337  ls -rt
  338  jupyter notebook &
  339  cd ..
  340  ls -rt
  341  cd Facebook_pull
  342  ls -rt
  343  cd ../
  344  ls -rt
  345  cd ../
  346  ls -rt
  347  cd MachineLearningMeetup
  348  ls -rt
  349  cd ../
  350  ls -rt
  351  cd ../
  352  ls -rt
  353  pwd
  354  cd Documents/
  355  ls -rt
  356  sl -rt Machine_Learning/
  357  ls -rt Machine_Learning/
  358  pwd
  359  pwd
  360  curl http://0.0.0.0/
  361  docker ps
  362  docker stop 1f43dcf09f60
  363  cd
  364  pip install awscli --upgrade 
  365  which aws
  366  aws
  367  aws --version
  368  ls -rt
  369  pwd
  370  ls -rt
  371  pwd
  372  cd Projects/
  373  ls -rt
  374  mkdir 4DML
  375  cd 4DML/
  376  git clone https://github.com/JesperDramsch/4D-seismic-warping-voxelmorph
  377  export PYTHONPATH=$PYTHONPATH:/path/to/voxelmorph/ext/neuron/:/path/to/voxelmorph/ext/pynd-lib/:/path/to/voxelmorph/ext/pytools-lib/
  378  pwd
  379  export PYTHONPATH=$PYTHONPATH:/path/to/voxelmorph/ext/neuron/:/Users/k_focus/Projects/4DML/4D-seismic-warping-voxelmorph/ext/pynd-lib/:/Users/k_focus/Projects/4DML/4D-seismic-warping-voxelmorph/ext/pytools-lib/
  380  export PYTHONPATH=$PYTHONPATH:/Users/k_focus/Projects/4DML/4D-seismic-warping-voxelmorph/ext/neuron/:/Users/k_focus/Projects/4DML/4D-seismic-warping-voxelmorph/ext/pynd-lib/:/Users/k_focus/Projects/4DML/4D-seismic-warping-voxelmorph/ext/pytools-lib/
  381  cd 4D-seismic-warping-voxelmorph/
  382  ls -rt
  383  vi src/path.py 
  384  python  src/path.py 
  385  vi src/path.py 
  386  docker-compose up devito
  387  docker-compose up devito
  388  docker-compose up devito
  389  docker-compose up devito
  390  docker-compose up devito
  391  docker-compose up devito
  392  docker-compose up devito
  393  pwd
  394  ls -rt
  395  docker-compose up devito
  396  lsof -i :8888
  397  kill -9 81902
  398  kill -9 467
  399  docker-compose up devito
  400  docker-compose up devito
  401  docker-compose up devito
  402  wpd
  403  pwd
  404  cd /Users/k_focus/Dev/devito/examples/seismic/tutorials
  405  ls -rt *.py
  406  vi get_datalag_dou_ly.py
  407  pwd
  408  ls -rt /Users/k_focus/Dev/devito/examples/seismic/tutorials/velocity_4Drand_2a_dou_ly.npy
  409  PWD
  410  pwd
  411  ls -rt
  412  ls -rt *b
  413  cp random_4D_modelling_dou2_layers.ipynb random_4D_modelling_dou2_layers_shts.ipynb
  414  pwd
  415  cd /Users/k_focus/Dev3/devito/examples/seismic/tutorials
  416  ls -rt
  417  cp random_4D_modelling_dou2_layers.ipynb random_4D_modelling_dou2_layers_shts.ipynb
  418  cd /Users/k_focus/Dev3/devito
  419  cd /Users/k_focus/Dev3/devito/examples/seismic/tutorials
  420  ls -rt
  421  cp /Users/k_focus/Dev/devito/examples/seismic/tutorials/velocity_4Drand_2a_dou_ly.npy .
  422  cp /Users/k_focus/Dev/devito/examples/seismic/tutorials/velocity_4Drand_2b_dou_ly.npy .
  423  cp /Users/k_focus/Dev/devito/examples/seismic/tutorials/data_4Drand_2a_dou_ly.npy .
  424  cp /Users/k_focus/Dev/devito/examples/seismic/tutorials/data_4Drand_2b_dou_ly.npy .
  425  cp /Users/k_focus/Dev/devito/examples/seismic/tutorials/data_4Dbase_2b_dou_ly.npy .
  426  cp /Users/k_focus/Dev/devito/examples/seismic/tutorials/data_4Dbase_2a_dou_ly.npy .
  427  ls -rt
  428  cp 4D_gradient_rand_dou_ly_1shot.ipynb 4D_gradient_dou_ly_1shot.ipynb
  429  python 4D_CNN_double_dou_ly_xt2.py
  430  vi 4D_CNN_double_dou_ly_xt2.py
  431  python 4D_CNN_double_dou_ly_xt2.py
  432  vi 4D_CNN_double_dou_ly_xt2.py
  433  python 4D_CNN_double_dou_ly_xt2.py
  434  vi 4D_CNN_double_dou_ly_xt2.py
  435  python 4D_CNN_double_dou_ly_xt2.py
  436  vi 4D_CNN_double_dou_ly_xt2.py
  437  python 4D_CNN_double_dou_ly_xt2.py
  438  vi 4D_CNN_double_dou_ly_xt2.py
  439  python 4D_CNN_double_dou_ly_xt2.py
  440  vi 4D_CNN_double_dou_ly_xt2.py
  441  ls -rt *.csh
  442  ls -rt *.py
  443  vi vi 4D_CNN_double_dou_ly.py
  444  vi 4D_CNN_double_dou_ly.py
  445  python 4D_CNN_double_dou_ly.py
  446  vi 4D_CNN_double_dou_ly.py
  447  vi 4D_CNN_double_dou_ly.py
  448  vi 4D_CNN_double_dou_ly.py
  449  python 4D_CNN_double_dou_ly.py
  450  ls -rt *npy
  451  ls -lrt *npy
  452  ls -lrt *npy | sort -n -r
  453  ls -lrt *npy | sort -n
  454  ls -rt *t2.*
  455  rm -f data_xtrain_abcdef_dou_ly_xt2.npy 
  456  rm -rf data_ytrain_abcdef_dou_ly_xt2.npy
  457  rm -rf data_xvalid_abcdef_dou_ly_xt2.npy
  458  rm -rf data_yvalid_abcdef_dou_ly_xt2.npy
  459  rm -rf data_xtest_abcdef_dou_ly_xt2.npy
  460  rm -rf data_ytest_abcdef_dou_ly_xt2.npy
  461  ls -rt *.py
  462  vi 4D_CNN_double_RNet_dd_dou_ly.py
  463  ls -lrt *npy | sort -n
  464  ls -lrt *.npy | sort -n
  465  pwd
  466  ls -rt
  467  pwd
  468  ls -rt *.py
  469  python 4D_CNN_double_dou_ly.py
  470  ls -rt *.py
  471  vi 4D_CNN_double_dou_ly_xt2.py 
  472  python 4D_CNN_double_dou_ly_xt2.py 
  473  ls -rt
  474  ls -rt *.py
  475  ls -rt *.b
  476  ls -rt *b
  477  cp QC_test_data_dou_ly.ipynb QC_test_data_dou_ly2.ipynb
  478  pwd
  479  ls -rt 4D*.NPY
  480  ls -rt 4D*.npy
  481  ls -rt *.py
  482  vi 4D_CNN_double_dou_ly_xt2.py 
  483  vi 4D_CNN_double_dou_ly_xt2.py 
  484  python 4D_CNN_double_dou_ly_xt2.py
  485  ls -rt *h5
  486  pwd
  487  ls -rt /Users/k_focus/Dev/devito/examples/seismic/tutorials/4D_128bash_250epoc_64px_CNNcln_dou_ly_xt2_l2-l16_abcdef_model.h5
  488  ls -rt *.py
  489  .save
  490  vi 4D_CNN_double_dou_ly_xt2.py 
  491  python 4D_CNN_double_dou_ly_xt2.py 
  492  ls -rt *h5
  493  ls -rt *.py
  494  vi 4D_CNN_double_dou_ly.py
  495  python 4D_CNN_double_dou_ly.py
  496  ls -rt *.py
  497  vi 4D_CNN_double_dou_ly.py
  498  ks 0rt *h5
  499  ls -rt *h5
  500  pwd
  501  ls -rt
  502  vi main.py 
  503  ls -rt
  504  vi test_main.py
  505  EMAIL = 'wolf@thedoor.com'
  506  PASSWORD = 'huff-puff'
  507  export TOKEN=`curl -d '{"email":"wolf@thedoor.com","password":"huff-puff"}' -H "Content-Type: application/json" -X POST localhost:8080/auth  | jq -r '.token'`
  508  echo $TOKEN
  509  curl --request GET 'http://127.0.0.1:8080/contents' -H "Authorization: Bearer ${TOKEN}" | jq .
  510  history
  511  history > tmp_script
